SAMPLES = ["GBMEC5785", "GBMEC5441", "GBMEC5433", "GBMEC5377", "EC-1", "EC-2", "EC-3"]

localrules: all, hisat2

rule all:
	input:
		#expand("results/trimmed/{S}_trimmed_{N}.fastq.gz", S=SAMPLES, N=["1","2"]),
		expand("results/salmon/{S}", S=SAMPLES)
rule trim:
	input:
		r1 = "data_rna/{S}_1.fastq.gz",
		r2 = "data_rna/{S}_2.fastq.gz"
	output:
		r1 = "results/trimmed/{S}_trimmed_1.fastq.gz",
		r2 = "results/trimmed/{S}_trimmed_2.fastq.gz"
	resources:
		mem_mb=8000,
		runtime=360,
		cpus_per_task=4,
		account="othcxnlp"
	shell:
		"""
		module load cesga/system miniconda3/22.11.1-1
		PS1="test"
		conda activate trimeado
		fastp -i {input.r1} -I {input.r2} -q 20 --disable_adapter_trimming --disable_trim_poly_g -o {output.r1} -O {output.r2}
		conda deactivate
		"""
rule fastqc:
	input: 
		"results/trimmed/*fastq.gz"
	output:
		"results/trimmed/fastqc"
	shell:
		"""
		module load cesga/system miniconda3/22.11.1-1
		conda activate trimeado
		fastqc -o {output} {input}
		conda deactivate
		"""
rule salmon:
    input:
        r1 = "results/trimmed/{S}_trimmed_1.fastq.gz",
        r2 = "results/trimmed/{S}_trimmed_2.fastq.gz"
    output:
        directory("results/salmon/{S}")
    resources:
        mem_mb=8000,
        runtime=1080,
        cpus_per_task=4,
        account="othcxnlp"
    shell:
        """
        module load cesga/2020 gcc/system salmon/1.10.2
        PS1="test"
        salmon quant -i ../utilities/salmon_index -l A -1 {input.r1} -2 {input.r2} -p {resources.cpus_per_task} --validateMappings -o {output}
        """